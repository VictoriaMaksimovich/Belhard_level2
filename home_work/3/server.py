"""
написать приложение-сервер используя модуль socket работающее в домашней
локальной сети.
Приложение должно принимать данные с любого устройства в сети отправленные
или через программу клиент или через браузер
    - если данные пришли по протоколу http создать возможность след.логики:
        - если путь содержит /test/<int>/ вывести сообщение - тест с номером int запущен

        - если путь содержит message/<login>/<text>/ вывести в консоль сообщение
            "{дата время} - сообщение от пользователя {login} - {text}"

        - во всех остальных случаях вывести сообщение:
            "пришли неизвестные  данные по HTTP - путь такой то"


    - если данные пришли НЕ по протоколу http создать возможность след.логики:
        - если пришла строка формата "command:reg; login:<login>; password:<pass>"
            - выполнить проверку:
                login - только латинские символы и цифры, минимум 6 символов
                password - минимум 8 символов, должны быть хоть 1 цифра
            - при успешной проверке:
                1. вывести сообщение:
                    "{дата время} - пользователь {login} зарегистрирован"
                2. добавить данные пользователя в список/словарь
            - если проверка не прошла вывести сообщение:
                "{дата время} - ошибка регистрации {login} - неверный пароль/логин"

        - если пришла строка формата "command:signin; login:<login>; password:<pass>"
            выполнить проверку зарегистрирован ли такой пользователь:

            при успешной проверке:
                1. вывести сообщение:
                    "{дата время} - пользователь {login} произведен вход"

            если проверка не прошла вывести сообщение
                "{дата время} - ошибка входа {login} - неверный пароль/логин"

        - во всех остальных случаях вывести сообщение:
            "пришли неизвестные  данные - <присланные данные>"


"""
import datetime

import socket

date_now = datetime.datetime.now()

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

HOST = ('127.0.0.1', 7777)

sock.bind(HOST)
sock.listen()

path = ''
database = []

while True:
    conn, addr = sock.accept()
    data = conn.recv(1024).decode()
    if 'HTTP' in data.split('\n')[0].split()[2]:
        path = data.split('\n')[0].split()[1]
        if path == '/test/<int>/':
            print(f'Тест с номером {path.split('/')[2]} запущен')
        elif path == 'message/<login>/<text>/':
            print(f'{date_now} - сообщение от пользователя {path.split('/')[1]} - {path.split('/')[2]}')
        else:
            print(f'Пришли неизвестные  данные по HTTP - путь {path}')
    else:
        data = data.split('; ')
        data_n = list(map(lambda x: x.split(':'), data))
        if len(data_n[1][1]) >= 6 and all(x.isalnum() for x in data_n[1][1]):
            if len(data_n[2][1]) >= 8 and any(True for x in data_n[2][1] if x.isdigit()):
                database.append(data_n)
                print(database)
                print(print(f'{date_now} - пользователь {data_n[1][1]} зарегистрирован'))
            else:
                print(f'{date_now} - ошибка регистрации {data_n[1][1]} - неверный пароль')
        else:
            print(f'{date_now} - ошибка регистрации {data_n[1][1]} - неверный логин')



